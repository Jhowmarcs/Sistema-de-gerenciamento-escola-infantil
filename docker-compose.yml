version: '3.8'

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: escola_infantil
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - escola_network
    restart: unless-stopped

  # API Flask
  api:
    build: .
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/escola_infantil
      SECRET_KEY: escola-infantil-secret-key-2024
      FLASK_ENV: production
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - escola_network
    command: ["gunicorn", "-w", "4", "-b", "0.0.0.0:5000", "app:app"]
    restart: unless-stopped

  # Frontend Streamlit
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    environment:
      API_URL: http://api:5000
    ports:
      - "8501:8501"
    depends_on:
      - api
    networks:
      - escola_network
    restart: unless-stopped

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - escola_network
    depends_on:
      - api
    restart: unless-stopped

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - escola_network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  escola_network:
    driver: bridge

volumes:
  postgres_data: